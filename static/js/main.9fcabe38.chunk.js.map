{"version":3,"sources":["icons/logo512.png","context/auth.js","PrivateRoute.js","components/Register.js","components/Login.js","utility.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthContext","createContext","useAuth","useContext","PrivateRoute","Component","component","rest","authToken","render","props","to","Register","useState","username","setUsername","name","setName","email","setEmail","password","setPassword","confirmpassword","setConfirmpassword","setAuthToken","handleRegistration","e","preventDefault","document","getElementById","style","display","error","length","validateForm","payload","toLowerCase","audience","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","accessToken","localStorage","setItem","user","refreshToken","console","log","errors","Password","cpassword","ConfirmPassword","Email","undefined","innerHTML","handleResponseErrors","history","push","className","src","icon","alt","type","placeholder","onChange","target","value","id","onClick","Login","handleLogin","message","dismiss","handleUserDelete","handleUserPhotoUpload","click","handleUserWallpaperUpload","getUserPhoto","portraits","photos","filter","portrait","url","getUserWallpaper","wallpapers","wallpaper","Profile","bio","setBio","birthdate","setBirthdate","city","setCity","state","setState","photo","setPhoto","setWallpaper","parse","userName","refreshUser","userPhoto","userWallpaper","handleUserUpdate","refreshTokens","FormData","append","forms","files","birthDate","status","data","clear","backgroundImage","encType","moment","joinDate","format","role","fontSize","data-dismiss","aria-label","aria-hidden","defaultValue","map","x","key","accept","img","URL","createObjectURL","handlePhotoChange","handleWallpaperChange","title","App","existingToken","getItem","Provider","basename","process","exact","path","login","register","profile","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,qC,uLCE9BC,EAAcC,0BAEpB,SAASC,IACd,OAAOC,qBAAWH,G,YCgBLI,MAjBf,YAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAC/CC,EAAcN,IAAdM,UAER,OACE,kBAAC,IAAD,iBACMD,EADN,CAEEE,OAAQ,SAAAC,GAAK,OACXF,EACE,kBAACH,EAAcK,GAEf,kBAAC,IAAD,CAAUC,GAAG,gB,yBCqHRC,MA9Hf,SAAkBF,GAAQ,IAAD,EACSG,mBAAS,IADlB,mBAChBC,EADgB,KACNC,EADM,OAECF,mBAAS,IAFV,mBAEhBG,EAFgB,KAEVC,EAFU,OAGGJ,mBAAS,IAHZ,mBAGhBK,EAHgB,KAGTC,EAHS,OAISN,mBAAS,IAJlB,mBAIhBO,EAJgB,KAINC,EAJM,OAKuBR,mBAAS,IALhC,mBAKhBS,EALgB,KAKCC,EALD,KAOfC,EAAiBtB,IAAjBsB,aAgDR,SAASC,EAAmBC,GAG1B,GAFAA,EAAEC,iBACFC,SAASC,eAAe,oBAAoBC,MAAMC,QAAU,OAhD/D,WACG,IAAIC,EAAQ,EAiBZ,OAhBIlB,EAASmB,OAAS,IACpBD,EAAQ,GAENd,EAAMe,OAAS,IACjBD,EAAQ,GAEU,IAAhBhB,EAAKiB,SACPD,EAAQ,GASI,IAAVA,GACFJ,SAASC,eAAe,oBAAoBC,MAAMC,QAAU,SACrD,IAEPH,SAASC,eAAe,oBAAoBC,MAAMC,QAAU,QACrD,GA0BLG,GAAgB,CAClBN,SAASC,eAAe,WAAWC,MAAMC,QAAU,QACnD,IAAMI,EAAU,CACdrB,SAAUA,EAASsB,cACnBpB,KAAMA,EACNE,MAAOA,EACPE,SAAUA,EACVE,gBAAiBA,EACjBe,SAAU,cAEZC,MAAM,oDAAqD,CACzDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,oCACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KACpBU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAASC,GACblB,SAASC,eAAe,WAAWC,MAAMC,QAAU,OAC/Ce,EAASE,aACXC,aAAaC,QAAQ,OAAQP,KAAKC,UAAUE,EAASK,OACrDF,aAAaC,QAAQ,eAAgBP,KAAKC,UAAUE,EAASM,eAC7D5B,EAAasB,EAASE,eAEtBK,QAAQC,IAAI,uBACZD,QAAQC,IAAIR,EAASS,QAhD/B,SAA8BvB,GAC5B,IAAIZ,EAAWY,EAAMwB,SACjBC,EAAYzB,EAAM0B,gBAClBxC,EAAQc,EAAM2B,MACd5B,EAAU,QAEC6B,IAAX1C,IACFa,EAAUb,QAEK0C,IAAbxC,IACFW,GAAW,QAAUX,QAELwC,IAAdH,IACF1B,GAAW,QAAU0B,GAEvB7B,SAASC,eAAe,oBAAoBgC,UAAY9B,EACxDH,SAASC,eAAe,oBAAoBC,MAAMC,QAAU,QAiCpD+B,CAAqBhB,EAASS,iBAIlCF,QAAQC,IAAI,qBAIlB,OAAIL,aAAaD,aACftC,EAAMqD,QAAQC,KAAK,YACZ,kBAAC,IAAD,CAAUrD,GAAG,cAGlB,4BAAQsD,UAAU,kCAChB,yBAAKC,IAAKC,IAAMF,UAAU,aAAaG,IAAI,SAC3C,uCACA,8BACE,yBAAKH,UAAU,cACb,2BAAOI,KAAK,OAAOJ,UAAU,6BAA6BK,YAAY,iBAAiBC,SAAU,SAAA7C,GAAOX,EAAYW,EAAE8C,OAAOC,WAE/H,yBAAKR,UAAU,cACb,2BAAOI,KAAK,OAAOJ,UAAU,6BAA6BK,YAAY,aAAaC,SAAU,SAAA7C,GAAOT,EAAQS,EAAE8C,OAAOC,WAEvH,yBAAKR,UAAU,cACb,2BAAOI,KAAK,QAAQJ,UAAU,6BAA6BK,YAAY,cAAcC,SAAU,SAAA7C,GAAOP,EAASO,EAAE8C,OAAOC,WAE1H,yBAAKR,UAAU,cACb,2BAAOI,KAAK,WAAWJ,UAAU,6BAA6BK,YAAY,iBAAiBC,SAAU,SAAA7C,GAAOL,EAAYK,EAAE8C,OAAOC,WAEnI,yBAAKR,UAAU,cACb,2BAAOI,KAAK,WAAWJ,UAAU,6BAA6BK,YAAY,mBAAmBC,SAAU,SAAA7C,GAAOH,EAAmBG,EAAE8C,OAAOC,WAE5I,yBAAKC,GAAG,oBAAR,0BACA,4BAAQL,KAAK,SAASJ,UAAU,4BAA4BU,QAAS,SAACjD,GAAD,OAAOD,EAAmBC,KAA/F,aAEF,uBAAGuC,UAAU,qBAAb,MAAoC,kBAAC,IAAD,CAAMtD,GAAG,SAASsD,UAAU,QAA5B,YC7C7BW,MA3Ef,SAAelE,GAAQ,IAAD,EACYG,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,OAEYF,mBAAS,IAFrB,mBAEbO,EAFa,KAEHC,EAFG,KAIZG,EAAiBtB,IAAjBsB,aAWR,SAASqD,EAAYnD,GAInB,GAHAA,EAAEC,iBACFC,SAASC,eAAe,eAAeC,MAAMC,QAAU,OACvDH,SAASC,eAAe,oBAAoBC,MAAMC,QAAU,OAXxDjB,EAASmB,OAAS,GAAKnB,EAASmB,OAAS,IAG3CL,SAASC,eAAe,oBAAoBC,MAAMC,QAAU,QACrD,GAQW,CAClBH,SAASC,eAAe,WAAWC,MAAMC,QAAU,QACnD,IAAMI,EAAU,CACdrB,SAAUA,EACVM,SAAUA,EACViB,SAAU,cAEZC,MAAM,iDAAkD,CACtDC,OAAQ,OACRC,QAAS,CACPC,OAAQ,oCACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KACpBU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAASC,GACTA,EAASE,aACXC,aAAaC,QAAQ,OAAQP,KAAKC,UAAUE,EAASK,OACrDF,aAAaC,QAAQ,eAAgBP,KAAKC,UAAUE,EAASM,eAC7D5B,EAAasB,EAASE,eAEtBK,QAAQC,IAAI,gBACZD,QAAQC,IAAIR,EAASgC,SACrBlD,SAASC,eAAe,WAAWC,MAAMC,QAAU,OACnDH,SAASC,eAAe,eAAeC,MAAMC,QAAU,iBAI3DsB,QAAQC,IAAI,qBAGlB,OAAIL,aAAaD,aACftC,EAAMqD,QAAQC,KAAK,YACZ,kBAAC,IAAD,CAAUrD,GAAG,cAGlB,4BAAQsD,UAAU,+BAChB,yBAAKC,IAAKC,IAAMF,UAAU,aAAaG,IAAI,SAC3C,mCACA,8BACE,yBAAKH,UAAU,cACb,2BAAOI,KAAK,OAAOJ,UAAU,6BAA6BK,YAAY,iBAAiBG,MAAO3D,EAAUyD,SAAU,SAAA7C,GAAOX,EAAYW,EAAE8C,OAAOC,WAEhJ,yBAAKR,UAAU,cACb,2BAAOI,KAAK,WAAWJ,UAAU,6BAA6BK,YAAY,iBAAiBG,MAAOrD,EAAUmD,SAAU,SAAA7C,GAAOL,EAAYK,EAAE8C,OAAOC,WAEpJ,yBAAKC,GAAG,eAAR,uBACA,yBAAKA,GAAG,oBAAR,0BACA,4BAAQL,KAAK,SAASJ,UAAU,4BAA4BU,QAAS,SAACjD,GAAD,OAAOmD,EAAYnD,KAAxF,UAEF,uBAAGuC,UAAU,qBAAb,MAAoC,kBAAC,IAAD,CAAMtD,GAAG,YAAYsD,UAAU,QAA/B,e,gBC/CrC,SAASc,IACdnD,SAASC,eAAe,uBAAuBC,MAAMC,QAAU,OAG1D,SAASiD,IACdpD,SAASC,eAAe,WAAWC,MAAMC,QAAU,OACnDsB,QAAQC,IAAI,gBAGP,SAAS2B,IACdrD,SAASC,eAAe,gBAAgBqD,QAGnC,SAASC,IACdvD,SAASC,eAAe,oBAAoBqD,QAGvC,SAASE,EAAajC,GAC3B,IAAIkC,EAAYlC,EAAKmC,OAAOC,QAAO,SAAS7D,GAC1C,OAAsB,IAAfA,EAAE8D,YAGX,OAAIH,EAAUpD,OAAS,EACdoD,EAAU,GAAGI,IAEb,GAIJ,SAASC,EAAiBvC,GAC/B,IAAIwC,EAAaxC,EAAKmC,OAAOC,QAAO,SAAS7D,GAC3C,OAAuB,IAAhBA,EAAEkE,aAGX,OAAID,EAAW1D,OAAS,EACf0D,EAAW,GAAGF,IAEd,GCmJII,MAvMf,SAAiBnF,GAAQ,IAanByC,EAbkB,EACUtC,mBAAS,IADnB,mBACfC,EADe,aAEED,mBAAS,KAFX,mBAEfG,EAFe,KAETC,EAFS,OAGIJ,mBAAS,IAHb,mBAGfK,EAHe,KAGRC,EAHQ,OAIAN,mBAAS,IAJT,mBAIfiF,EAJe,KAIVC,EAJU,OAKYlF,mBAAS,IALrB,mBAKfmF,EALe,KAKJC,EALI,OAMEpF,mBAAS,IANX,mBAMfqF,EANe,KAMTC,EANS,OAOItF,mBAAS,IAPb,mBAOfuF,EAPe,KAORC,EAPQ,OAQIxF,mBAAS,IARb,mBAQfyF,EARe,KAQRC,EARQ,OASY1F,mBAAS,IATrB,mBASf+E,EATe,KASJY,EATI,KActB,IAAKvD,aAAaE,OAASF,aAAaD,YAEtC,OADAtC,EAAMqD,QAAQC,KAAK,UACZ,kBAAC,IAAD,CAAUrD,GAAG,YDXjB,WACL,IAAIwC,EAAOR,KAAK8D,MAAMxD,aAAaE,MACnCb,MAAM,+CAAiDa,EAAKuD,SAAU,CAClEnE,OAAQ,QACPM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAASC,GACXG,aAAaC,QAAQ,OAAQP,KAAKC,UAAUE,OCOlD6D,GAIF,IAAIC,EAAYxB,EAHdjC,EAAOR,KAAK8D,MAAMxD,aAAaE,OAI7B0D,EAAgBnB,EAAiBvC,GA6BrC,SAAS2D,EAAiBpF,IDhErB,SAAuBsB,GAC1B,IAAII,EAAeT,KAAK8D,MAAMxD,aAAaG,cAC3Cd,MAAM,mDAAoD,CACtDC,OAAQ,OACRC,QAAS,CACLC,OAAQ,oCACR,eAAgB,mBAChB,cAAiB,UAAYO,GAEjCN,KAAMC,KAAKC,UAAUQ,KACpBP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAASC,GACXG,aAAaC,QAAQ,cAAeP,KAAKC,UAAUE,EAASE,cAC5DC,aAAaC,QAAQ,eAAgBP,KAAKC,UAAUE,EAASM,kBCoDrE2D,CAAcpE,KAAK8D,MAAMxD,aAAaD,cACtCtB,EAAEC,iBACFC,SAASC,eAAe,WAAWC,MAAMC,QAAU,QACnD,IAAMoB,EAAOR,KAAK8D,MAAMxD,aAAaE,MAkDnCvB,SAASC,eAAe,oBAAoBC,MAAMC,QAAU,OAhD5D,IAAII,EAAU,IAAI6E,SAClB7E,EAAQ8E,OAAO,KAAM9D,EAAKuB,IAC1BvC,EAAQ8E,OAAO,WAAuB,KAAVX,EAAgBnD,EAAKmD,MAAQ1E,SAASsF,MAAM,gBAAgB,gBAAgBC,MAAM,IAC9GhF,EAAQ8E,OAAO,YAA4B,KAAdrB,EAAoBzC,EAAKyC,UAAYhE,SAASsF,MAAM,gBAAgB,oBAAoBC,MAAM,IAC3HhF,EAAQ8E,OAAO,WAA0B,KAAbnG,EAAmBqC,EAAKuD,SAAW5F,GAC/DqB,EAAQ8E,OAAO,QAAoB,KAAV/F,EAAgBiC,EAAKjC,MAAQA,GACtDiB,EAAQ8E,OAAO,OAAkB,KAATjG,EAAemC,EAAKnC,KAAOA,GACnDmB,EAAQ8E,OAAO,MAAgB,KAARnB,EAAc3C,EAAK2C,IAAMA,GAChD3D,EAAQ8E,OAAO,YAA4B,KAAdjB,EAAoB7C,EAAKiE,UAAYpB,GAClE7D,EAAQ8E,OAAO,OAAkB,KAATf,EAAe/C,EAAK+C,KAAOA,GACnD/D,EAAQ8E,OAAO,QAAoB,KAAVb,EAAgBjD,EAAKiD,MAAQA,GACtD9D,MAAM,iDAAkD,CACtDC,OAAQ,MACRC,QAAS,CACP,cAAiB,UAAYG,KAAK8D,MAAMxD,aAAaD,cAEvDN,KAAMP,IACLU,MAAK,SAASC,GACf,OAAwB,MAApBA,EAASuE,OACJvE,EAASC,OAAOF,MAAK,SAACyE,GAC3B1F,SAASC,eAAe,WAAWC,MAAMC,QAAU,OAC/CuF,EAAKnE,MACPF,aAAaC,QAAQ,OAAQP,KAAKC,UAAU0E,EAAKnE,OACjDvB,SAASC,eAAe,uBAAuBC,MAAMC,QAAU,UAE/DsB,QAAQC,IAAI,iBACZD,QAAQC,IAAIR,EAASS,aAIzBF,QAAQC,IAAI,4CACZL,aAAasE,QACN,kBAAC,IAAD,CAAU5G,GAAG,UAqC5B,OAvGAiB,SAASC,eAAe,WAAWC,MAAMC,QAAU,OAwGjD,yBAAKkC,UAAU,mDACf,yBAAKS,GAAG,oBAAoBT,UAAU,qBACpC,yBAAKS,GAAG,kBAAkBT,UAAU,kBAAkBnC,MAAQ+E,EAAgB,CAAEW,gBAAiB,OAAOX,EAAc,KAAO,GAAKlC,QAASQ,GAC3I,8BAAM,uBAAGlB,UAAU,mBACjB,yBAAKS,GAAG,gBAAgBT,UAAU,gBAAgBnC,MAAQ8E,EAAY,CAAEY,gBAAiB,OAAOZ,EAAU,KAAO,GAAKjC,QAASM,GAC7H,8BAAM,uBAAGhB,UAAU,qBAGvB,uBAAGS,GAAG,WAAWT,UAAU,oBAAoBd,EAAKuD,WAEtD,0BAAM1F,KAAK,eAAe0D,GAAG,eAAeT,UAAU,eAAewD,QAAQ,sBAAsBlF,OAAO,OACxG,uBAAG0B,UAAU,6BAAb,UAAiDyD,IAAOvE,EAAKwE,UAAUC,OAAO,kBAC9E,yBAAKlD,GAAG,sBAAsBT,UAAU,oEAAoE4D,KAAK,QAAQ/F,MAAO,CAAEC,QAAS,SACzI,0BAAMD,MAAO,CAAEgG,SAAU,SAAzB,6BACA,4BAAQzD,KAAK,SAASJ,UAAU,QAAQ8D,eAAa,QAAQC,aAAW,QAAQrD,QAASI,GACvF,0BAAMkD,cAAY,QAAlB,UAOJ,yBAAKhE,UAAU,wBACb,2BAAOA,UAAU,yDAAjB,SACA,2BAAOI,KAAK,OAAOJ,UAAU,qBAAqBiE,aAAc/E,EAAKjC,MAAOoD,YAAY,cAAcC,SAAU,SAAA7C,GAAOP,EAASO,EAAE8C,OAAOC,UACzI,uBAAGR,UAAU,uBAEf,yBAAKA,UAAU,wBACb,2BAAOA,UAAU,yDAAjB,QACA,2BAAOI,KAAK,OAAOJ,UAAU,qBAAqBiE,aAAc/E,EAAKnC,KAAMsD,YAAY,aAAaC,SAAU,SAAA7C,GAAOT,EAAQS,EAAE8C,OAAOC,WAExI,yBAAKR,UAAU,wBACb,2BAAOA,UAAU,yDAAjB,YACA,2BAAOI,KAAK,OAAOJ,UAAU,qBAAqBiE,aAAcR,IAAOvE,EAAKiE,WAAWQ,OAAO,cAAgBrD,SAAU,SAAA7C,GAAOuE,EAAavE,EAAE8C,OAAOC,WAEvJ,yBAAKR,UAAU,wBACb,2BAAOA,UAAU,yDAAjB,QACA,2BAAOI,KAAK,OAAOJ,UAAU,qBAAqBiE,aAAc/E,EAAK+C,KAAM5B,YAAY,aAAaC,SAAU,SAAA7C,GAAOyE,EAAQzE,EAAE8C,OAAOC,WAExI,yBAAKR,UAAU,wBACb,2BAAOA,UAAU,yDAAjB,SACA,2BAAOI,KAAK,OAAOJ,UAAU,qBAAqBiE,aAAc/E,EAAKiD,MAAO9B,YAAY,cAAcC,SAAU,SAAA7C,GAAO2E,EAAS3E,EAAE8C,OAAOC,WAE3I,yBAAKR,UAAU,wBACb,2BAAOA,UAAU,yDAAjB,OACA,8BAAUI,KAAK,OAAOJ,UAAU,eAAeiE,aAAc/E,EAAK2C,IAAKxB,YAAY,wCAAwCC,SAAU,SAAA7C,GAAOqE,EAAOrE,EAAE8C,OAAOC,WAE9J,yBAAKR,UAAU,uBACZd,EAAKmC,OAAO6C,KACV,SAAAC,GAAC,OACA,yBAAKC,IAAKD,EAAE1D,IAER,yBAAKT,UAAU,QAAQC,IAAKkE,EAAE3C,IAAKrB,IAAKgE,EAAEpH,YAMpD,yBAAK0D,GAAG,oBAAR,0BACA,2BAAOA,GAAG,eAAeL,KAAK,OAAOiE,OAAO,UAAUtH,KAAK,QAAQuD,SAAU,SAAA7C,IA5EjF,SAA2BA,GACzB,IAAI6G,EAAMC,IAAIC,gBAAgB/G,EAAE8C,OAAO2C,MAAM,IACzCoB,IACF3G,SAASC,eAAe,iBAAiBC,MAAM0F,gBAAkB,OAAOe,EAAI,IAC5EhC,EAAS7E,EAAE8C,OAAOC,QAwEkEiE,CAAkBhH,MACtG,2BAAOgD,GAAG,mBAAmBL,KAAK,OAAOiE,OAAO,UAAUtH,KAAK,YAAYuD,SAAU,SAAA7C,IArEzF,SAA+BA,GAC7B,IAAI6G,EAAMC,IAAIC,gBAAgB/G,EAAE8C,OAAO2C,MAAM,IACzCoB,IACF3G,SAASC,eAAe,mBAAmBC,MAAM0F,gBAAkB,OAAOe,EAAI,IAC9E/B,EAAa9E,EAAE8C,OAAOC,QAiEsEkE,CAAsBjH,MAClH,yBAAKuC,UAAU,+BACb,uBAAG2E,MAAM,SAASjE,QAhJxB,WAGE,OAFA1B,aAAasE,QACb7G,EAAMqD,QAAQC,KAAK,KACZ,kBAAC,IAAD,CAAUrD,GAAG,QA6IhB,UACA,uBAAGiI,MAAM,qBAAqBjE,QAAS,SAAAjD,GAAOoF,EAAiBpF,KAA/D,eACA,uBAAGkH,MAAM,iBAAiB3E,UAAU,cAAcU,QAASK,GAA3D,sB,YC1KO6D,MAtBf,SAAanI,GACX,IAAMoI,EAAgBnG,KAAK8D,MAAMxD,aAAa8F,QAAQ,gBADpC,EAEgBlI,mBAASiI,GAFzB,mBAEXtI,EAFW,KAEAgB,EAFA,KASlB,OACE,kBAACxB,EAAYgJ,SAAb,CAAsBvE,MAAO,CAAEjE,YAAWgB,aAN3B,SAAC8F,GAChBrE,aAAaC,QAAQ,cAAeP,KAAKC,UAAU0E,IACnD9F,EAAa8F,MAKX,kBAAC,IAAD,CAAY2B,SAAUC,IACpB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI9I,UAAW+I,IACjC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAS9I,UAAW+I,IACtC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAY9I,UAAWgJ,IAEzC,kBAAC,EAAD,CAAcH,OAAK,EAACC,KAAK,WAAW9I,UAAWiJ,OChBnCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASpJ,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFmB,SAASC,eAAe,SDwHpB,kBAAmBiI,WACrBA,UAAUC,cAAcC,MAAMnH,MAAK,SAAAoH,GACjCA,EAAaC,kB","file":"static/js/main.9fcabe38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.44b122e7.png\";","import { createContext, useContext } from 'react'\n\nexport const AuthContext = createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from './context/auth'\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { authToken } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authToken ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/login' />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React, { useState } from 'react'\nimport { BrowserRouter as Route, Link, Redirect } from 'react-router-dom'\nimport { useAuth } from '../context/auth'\nimport icon from '../icons/logo512.png'\n\nfunction Register(props) {\n  const [username, setUsername] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmpassword, setConfirmpassword] = useState('')\n  // const [overlay, setOverlay] = useState(false)\n  const { setAuthToken } = useAuth()\n\n function validateForm() {\n    let error = 0\n    if (username.length < 4) {\n      error = 1\n    } \n    if (email.length < 6) {\n      error = 1\n    } \n    if (name.length === 0) {\n      error = 1\n    } \n    // if (this.state.password.length < 6 || this.state.password.length > 12) {\n    //   error = 1\n    // } \n    // if (this.state.password.length > 6 && this.state.password !== this.state.confirmpassword) {\n    //   error = 1\n    // } \n\n    if (error === 1) {\n      document.getElementById('validation-error').style.display = 'block'\n      return false\n    } else {\n      document.getElementById('validation-error').style.display = 'none'\n      return true\n    }\n  }\n\n  function handleResponseErrors(error) {\n    let password = error.Password\n    let cpassword = error.ConfirmPassword\n    let email = error.Email\n    let display = ''\n\n    if (email !==  undefined) {\n      display = email\n    }\n    if (password !== undefined) {\n      display += '<br/>' + password\n    }\n    if (cpassword !== undefined) {\n      display += '<br/>' + cpassword\n    }\n    document.getElementById('validation-error').innerHTML = display\n    document.getElementById('validation-error').style.display = 'block'\n  }\n\n  function handleRegistration(e) {\n    e.preventDefault()\n    document.getElementById('validation-error').style.display = 'none'\n    if (validateForm()) {\n      document.getElementById('overlay').style.display = 'block'\n      const payload = {\n        username: username.toLowerCase(),\n        name: name,\n        email: email,\n        password: password,\n        confirmpassword: confirmpassword,\n        audience: 'chocoboAPI'\n      }\n      fetch('https://chocobo.moogleapi.com/v1/account/register', {\n        method: 'post',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      }).then(response => response.json())\n        .then(function(response){\n          document.getElementById('overlay').style.display = 'none'\n          if (response.accessToken) {\n            localStorage.setItem('user', JSON.stringify(response.user))\n            localStorage.setItem('refreshToken', JSON.stringify(response.refreshToken))\n            setAuthToken(response.accessToken)\n          } else {\n            console.log('registration failed')\n            console.log(response.errors)\n            handleResponseErrors(response.errors)\n          }\n        })\n    } else {\n        console.log('validation failed')\n    }\n  }\n\n  if (localStorage.accessToken) {\n    props.history.push('/profile')\n    return <Redirect to='/profile' />\n  } else {\n    return (\n      <header className='form-container register-screen'>\n        <img src={icon} className='main-photo' alt='logo' />\n        <p>Sign up!</p>\n        <form>\n          <div className='form-group'>\n            <input type='text' className='form-control input-control' placeholder='Enter username' onChange={e => { setUsername(e.target.value) }} />\n          </div>\n          <div className='form-group'>\n            <input type='text' className='form-control input-control' placeholder='Enter name' onChange={e => { setName(e.target.value) }} />\n          </div>\n          <div className='form-group'>\n            <input type='email' className='form-control input-control' placeholder='Enter email' onChange={e => { setEmail(e.target.value) }} />\n          </div>\n          <div className='form-group'>\n            <input type='password' className='form-control input-control' placeholder='Enter password' onChange={e => { setPassword(e.target.value) }} />\n          </div>\n          <div className='form-group'>\n            <input type='password' className='form-control input-control' placeholder='Confirm password' onChange={e => { setConfirmpassword(e.target.value) }} />\n          </div>\n          <div id='validation-error'>form validation failed</div>\n          <button type='submit' className='btn btn-primary btn-block' onClick={(e) => handleRegistration(e)}>Register</button>\n        </form>\n        <p className='font-regular mt-3'>Or <Link to='/login' className='link'>Login</Link></p>\n      </header>\n    )\n  }\n}\n\nexport default Register\n","import React, { useState } from 'react'\nimport { BrowserRouter as Route, Link, Redirect} from 'react-router-dom'\nimport { useAuth } from '../context/auth'\nimport icon from '../icons/logo512.png'\n\nfunction Login(props) {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  // const [overlay, setOverlay] = useState(false)\n  const { setAuthToken } = useAuth()\n\n  function validateForm() {\n    if (username.length > 0 && username.length > 0) {\n      return true\n    } else {\n      document.getElementById('validation-error').style.display = 'block'\n      return false\n    }\n  }\n\n  function handleLogin(e) {\n    e.preventDefault()\n    document.getElementById('login-error').style.display = 'none'\n    document.getElementById('validation-error').style.display = 'none'\n    if (validateForm()) {\n      document.getElementById('overlay').style.display = 'block'\n      const payload = {\n        username: username,\n        password: password,\n        audience: 'chocoboAPI'\n      }\n      fetch('https://chocobo.moogleapi.com/v1/account/login', {\n        method: 'post',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      }).then(response => response.json())\n        .then(function(response){\n          if (response.accessToken) {\n            localStorage.setItem('user', JSON.stringify(response.user))\n            localStorage.setItem('refreshToken', JSON.stringify(response.refreshToken))\n            setAuthToken(response.accessToken)\n          } else {\n            console.log('failed login')\n            console.log(response.message)\n            document.getElementById('overlay').style.display = 'none'\n            document.getElementById('login-error').style.display = 'block'\n          }\n        })\n      } else {\n        console.log('validation failed')\n      }\n  }\n  if (localStorage.accessToken) {\n    props.history.push('/profile')\n    return <Redirect to='/profile' />\n  } else {\n    return (\n      <header className='form-container login-screen'>\n        <img src={icon} className='main-photo' alt='logo' />\n        <p>&nbsp;</p>\n        <form>\n          <div className='form-group'>\n            <input type='text' className='form-control input-control' placeholder='Enter username' value={username} onChange={e => { setUsername(e.target.value) }} />\n          </div>\n          <div className='form-group'>\n            <input type='password' className='form-control input-control' placeholder='Enter password' value={password} onChange={e => { setPassword(e.target.value) }} />\n          </div>\n          <div id='login-error'>invalid credentials</div>\n          <div id='validation-error'>enter your credentials</div>\n          <button type='submit' className='btn btn-primary btn-block' onClick={(e) => handleLogin(e)}>Login</button>\n        </form>\n        <p className='font-regular mt-3'>Or <Link to='/register' className='link'>Register</Link></p>\n      </header>\n    )\n  }\n}\n\nexport default Login\n","export function refreshTokens(accessToken) {\n    let refreshToken = JSON.parse(localStorage.refreshToken)\n    fetch('https://chocobo.moogleapi.com/v1/account/refresh', {\n        method: 'post',\n        headers: {\n            Accept: 'application/json, text/plain, */*',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + accessToken\n          },\n        body: JSON.stringify(refreshToken)\n      }).then(response => response.json())\n        .then(function(response) {\n            localStorage.setItem('accessToken', JSON.stringify(response.accessToken))\n            localStorage.setItem('refreshToken', JSON.stringify(response.refreshToken))\n    })\n}\n\nexport function refreshUser() {\n  let user = JSON.parse(localStorage.user)\n  fetch('https://chocobo.moogleapi.com/v1/manage/get/' + user.userName, {\n      method: 'get'\n    }).then(response => response.json())\n      .then(function(response) {\n          localStorage.setItem('user', JSON.stringify(response))\n  })\n}\n\nexport function dismiss() {\n  document.getElementById('update-notification').style.display = 'none'\n}\n\nexport function handleUserDelete() {\n  document.getElementById('overlay').style.display = 'none'\n  console.log('user deleted')\n}\n\nexport function handleUserPhotoUpload() {\n  document.getElementById('upload-photo').click()\n}\n\nexport function handleUserWallpaperUpload() {\n  document.getElementById('upload-wallpaper').click()\n}\n\nexport function getUserPhoto(user) {\n  let portraits = user.photos.filter(function(e){\n    return e.portrait === 1\n  })\n\n  if (portraits.length > 0) {\n    return portraits[0].url\n  } else {\n    return ''\n  }\n}\n\nexport function getUserWallpaper(user) {\n  let wallpapers = user.photos.filter(function(e){\n    return e.wallpaper === 1\n  })\n\n  if (wallpapers.length > 0) {\n    return wallpapers[0].url\n  } else {\n    return ''\n  }\n}","import React, { useState } from 'react'\nimport { BrowserRouter as Redirect} from 'react-router-dom'\nimport moment from 'moment'\nimport {  refreshTokens, \n          refreshUser,\n          dismiss, \n          handleUserDelete, \n          handleUserPhotoUpload, \n          handleUserWallpaperUpload,\n          getUserPhoto,\n          getUserWallpaper } from '../utility'\n\nfunction Profile(props) {\n  const [username, setUsername] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [bio, setBio] = useState('')\n  const [birthdate, setBirthdate] = useState('')\n  const [city, setCity] = useState('')\n  const [state, setState] = useState('')\n  const [photo, setPhoto] = useState('')\n  const [wallpaper, setWallpaper] = useState('')\n  // const [password, setPassword] = useState('')\n  // const [confirmpassword, setConfirmpassword] = useState('')\n  // const [overlay, setOverlay] = useState(false)\n  let user\n  if (!localStorage.user || !localStorage.accessToken) {\n    props.history.push('/login')\n    return <Redirect to='/login' />\n  } else {\n    refreshUser()\n    user = JSON.parse(localStorage.user)\n  }\n\n  let userPhoto = getUserPhoto(user)\n  let userWallpaper = getUserWallpaper(user)\n  document.getElementById('overlay').style.display = 'none'\n\n  // TODO: Implement this.\n  // function handleResponseErrors(error) {\n  //   let password = error.Password\n  //   let cpassword = error.ConfirmPassword\n  //   let email = error.Email\n  //   let display = ''\n\n  //   if (email !==  undefined) {\n  //     display = email\n  //   }\n  //   if (password !== undefined) {\n  //     display += '<br/>' + password\n  //   }\n  //   if (cpassword !== undefined) {\n  //     display += '<br/>' + cpassword\n  //   }\n  //   document.getElementById('validation-error').innerHTML = display\n  //   document.getElementById('validation-error').style.display = 'block'\n  // }\n\n  function handleLogout() {\n    localStorage.clear()\n    props.history.push('/')\n    return <Redirect to='/' />\n  }\n\n  function handleUserUpdate(e) {\n    refreshTokens(JSON.parse(localStorage.accessToken))\n    e.preventDefault()\n    document.getElementById('overlay').style.display = 'block'\n    const user = JSON.parse(localStorage.user)\n    if (validateForm()) {\n      let payload = new FormData()\n      payload.append('id', user.id)\n      payload.append('portrait', (photo === '') ? user.photo : document.forms['profile-form']['upload-photo'].files[0])\n      payload.append('wallpaper', (wallpaper === '') ? user.wallpaper : document.forms['profile-form']['upload-wallpaper'].files[0])\n      payload.append('username', (username === '') ? user.userName : username)\n      payload.append('email', (email === '') ? user.email : email)\n      payload.append('name', (name === '') ? user.name : name)\n      payload.append('bio', (bio === '') ? user.bio : bio)\n      payload.append('birthdate', (birthdate === '') ? user.birthDate : birthdate)\n      payload.append('city', (city === '') ? user.city : city)\n      payload.append('state', (state === '') ? user.state : state)\n      fetch('https://chocobo.moogleapi.com/v1/manage/update', {\n        method: 'put',\n        headers: {\n          'Authorization': 'Bearer ' + JSON.parse(localStorage.accessToken)\n        },\n        body: payload\n      }).then(function(response) {\n        if (response.status === 200) {\n          return response.json().then((data) => {\n            document.getElementById('overlay').style.display = 'none'\n            if (data.user) {\n              localStorage.setItem('user', JSON.stringify(data.user))\n              document.getElementById('update-notification').style.display = 'block'\n            } else {\n              console.log('update failed')\n              console.log(response.errors)\n            }\n          })\n        } else {\n          console.log('Probably an invalid token. Log in again.')\n          localStorage.clear()\n          return <Redirect to='/' />\n        }\n      })\n    } else {\n      console.log('validation failed')\n    }\n  }\n\n  function validateForm() {\n    let error = 0\n\n    if (error === 1) {\n      document.getElementById('overlay').style.display = 'none'\n      document.getElementById('validation-error').style.display = 'block'\n      return false\n    } else {\n      document.getElementById('validation-error').style.display = 'none'\n      return true\n    }\n  }\n\n  function handlePhotoChange(e) {\n    let img = URL.createObjectURL(e.target.files[0]);\n    if (img) {\n      document.getElementById('profile-photo').style.backgroundImage = 'url('+img+')'\n      setPhoto(e.target.value)\n    }\n  }\n\n  function handleWallpaperChange(e) {\n    let img = URL.createObjectURL(e.target.files[0]);\n    if (img) {\n      document.getElementById('wallpaper-photo').style.backgroundImage = 'url('+img+')'\n      setWallpaper(e.target.value)\n    }\n  }\n\n  return (\n    <div className='form-container form-container-profile component'>\n    <div id='profile-container' className='profile-container'>\n      <div id='wallpaper-photo' className='wallpaper-photo' style={ userWallpaper ? { backgroundImage: 'url('+userWallpaper+')'} : {} } onClick={handleUserWallpaperUpload}>\n      <span><i className=\"fas fa-camera\"></i></span>\n        <div id='profile-photo' className='profile-photo' style={ userPhoto ? { backgroundImage: 'url('+userPhoto+')'} : {} } onClick={handleUserPhotoUpload}>\n          <span><i className=\"fas fa-camera\"></i></span>\n        </div>\n      </div>\n      <p id='username' className='font-weight-bold'>{user.userName}</p>\n    </div>\n    <form name='profile-form' id='profile-form' className='profile-form' encType='multipart/form-data' method='put'>\n      <p className='font-small text-secondary'>Joined {moment(user.joinDate).format('MMMM DD, YYYY')}</p>\n      <div id='update-notification' className='alert alert-success alert-dismissible text-center fade show small' role='alert' style={{ display: 'none' }}>\n        <span style={{ fontSize: '16px' }}>User information updated!</span>\n        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={dismiss}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      {/* <div className='input-group mb-2 row'>\n        <label className=\"col-3 col-form-label px14 text-left font-weight-bold \">Username</label>\n        <input type='text' className='form-control login-username col-9' defaultValue={user.userName} placeholder='Enter username' onChange={e => { setUsername(e.target.value) }} />\n      </div> */}\n      <div className='input-group mb-2 row'>\n        <label className=\"col-3 col-form-label px14 text-left font-weight-bold \">Email</label>\n        <input type='text' className='form-control col-9' defaultValue={user.email} placeholder='Enter email' onChange={e => { setEmail(e.target.value) }} />\n        <i className=\"fas fa-pencil-alt\"></i>\n      </div>\n      <div className='input-group mb-2 row'>\n        <label className=\"col-3 col-form-label px14 text-left font-weight-bold \">Name</label>\n        <input type='text' className='form-control col-9' defaultValue={user.name} placeholder='Enter name' onChange={e => { setName(e.target.value) }} />\n      </div>\n      <div className='input-group mb-2 row'>\n        <label className=\"col-3 col-form-label px14 text-left font-weight-bold \">Birthday</label>\n        <input type='date' className='form-control col-9' defaultValue={moment(user.birthDate).format('YYYY-MM-DD')}  onChange={e => { setBirthdate(e.target.value) }} />\n      </div>\n      <div className='input-group mb-2 row'>\n        <label className=\"col-3 col-form-label px14 text-left font-weight-bold \">City</label>\n        <input type='text' className='form-control col-9' defaultValue={user.city} placeholder='Enter city' onChange={e => { setCity(e.target.value) }} />\n      </div>\n      <div className='input-group mb-2 row'>\n        <label className=\"col-3 col-form-label px14 text-left font-weight-bold \">State</label>\n        <input type='text' className='form-control col-9' defaultValue={user.state} placeholder='Enter state' onChange={e => { setState(e.target.value) }} />\n      </div>\n      <div className='input-group mb-2 row'>\n        <label className=\"col-3 col-form-label px14 text-left font-weight-bold \">Bio</label>\n        <textarea type='text' className='form-control' defaultValue={user.bio} placeholder='Enter a brief description of yourself' onChange={e => { setBio(e.target.value) }}></textarea>\n      </div>\n      <div className='row mx-0 photo-grid'>\n        {user.photos.map\n          (x =>\n            <div key={x.id}>\n              { \n                <img className='photo' src={x.url} alt={x.name} /> \n              } \n            </div>\n          )\n        }\n      </div>\n      <div id='validation-error'>form validation failed</div>\n      <input id=\"upload-photo\" type=\"file\" accept=\"image/*\" name=\"photo\" onChange={e => { handlePhotoChange(e) }} />\n      <input id=\"upload-wallpaper\" type=\"file\" accept=\"image/*\" name=\"wallpaper\" onChange={e => { handleWallpaperChange(e) }} />\n      <div className='button-container text-muted'>\n        <p title='Logout' onClick={handleLogout}>Logout</p>\n        <p title='Update Information' onClick={e => { handleUserUpdate(e) }}>Update Info</p>\n        <p title='Delete Account' className=\"text-danger\" onClick={handleUserDelete}>Delete Account</p>\n      </div>\n    </form>\n  </div>\n  )\n}\n\nexport default Profile\n","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { AuthContext } from './context/auth'\nimport PrivateRoute from './PrivateRoute'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport register from './components/Register'\nimport login from './components/Login'\nimport profile from './components/Profile'\nimport view from './components/View'\nimport './App.css'\n\nfunction App(props) {\n  const existingToken = JSON.parse(localStorage.getItem('accessToken'))\n  const [authToken, setAuthToken] = useState(existingToken)\n  \n  const setToken = (data) => {\n    localStorage.setItem('accessToken', JSON.stringify(data))\n    setAuthToken(data);\n  }\n\n  return (\n    <AuthContext.Provider value={{ authToken, setAuthToken: setToken }}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Route exact path='/' component={login} />\n        <Route exact path='/login' component={login} />\n        <Route exact path='/register' component={register} />\n        {/* <Route exact path='/profile/view/:id' component={view} /> */}\n        <PrivateRoute exact path='/profile' component={profile} />\n      </HashRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}