{"version":3,"sources":["icons/chocoboapi-c-2.png","components/Login.js","components/Register.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","state","username","password","user","success","document","getElementById","style","display","sessionStorage","token","JSON","parse","this","setState","length","e","preventDefault","validateForm","that","payload","audience","fetch","method","headers","Accept","body","stringify","then","response","json","setItem","console","log","message","icon","require","to","className","src","alt","path","component","login","register","type","placeholder","onChange","target","value","id","onClick","handleLogin","Component","Register","firstname","email","confirmpassword","error","Password","cpassword","ConfirmPassword","Email","undefined","innerHTML","errors","handleResponseErrors","exact","handleRegistration","Profile","lastname","age","birthdate","city","photo","wallpaper","handleLogout","clear","history","push","FormData","append","forms","files","userName","firstName","lastName","birthDate","img","URL","createObjectURL","isLoggedIn","name","encType","accept","onInput","handleProfilePhotoChange","moment","joinDate","format","defaultValue","title","handleUserUpdate","handleUserDelete","App","basename","Navbar","profile","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8df3a9f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chocoboapi-c-2.fb4ca4e1.png\";","import React, { Component } from 'react'\nimport { BrowserRouter as Route, Link, Redirect} from 'react-router-dom'\nimport register from './Register'\nimport login from './Login'\n\nclass Login extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      username: '',\n      password: '',\n      user: {},\n      success: false\n    }\n  }\n\n  componentDidMount () {\n    document.getElementById('overlay').style.display = 'none'\n    if (sessionStorage.token) {\n      let user = JSON.parse(sessionStorage.user);\n      this.setState({\n        success: true,\n        user: user\n      })\n    }\n  }\n\n  validateForm () {\n    if (this.state.username.length > 0 && this.state.username.length > 0) {\n      return true\n    } else {\n      document.getElementById('validation-error').style.display = 'block'\n      return false\n    }\n  }\n\n  handleLogin (e) {\n    e.preventDefault()\n    document.getElementById('login-error').style.display = 'none'\n    document.getElementById('validation-error').style.display = 'none'\n    if (this.validateForm()) {\n      const that = this\n      document.getElementById('overlay').style.display = 'block'\n      const payload = {\n        username: this.state.username,\n        password: this.state.password,\n        audience: 'MoogleApi'\n      }\n      fetch('https://chocoboapi.azurewebsites.net/v1/account/login', {\n        method: 'post',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      }).then(response => response.json())\n        .then(function(response){\n          if (response.token) {\n            sessionStorage.setItem('token', response.token);\n            sessionStorage.setItem('user', JSON.stringify(response.user));\n            that.setState({\n              success: true,\n              user: response.user\n            })\n          } else {\n            console.log('failed login')\n            console.log(response.message)\n            document.getElementById('overlay').style.display = 'none'\n            document.getElementById('login-error').style.display = 'block'\n          }\n        })\n      } else {\n        console.log('validation failed')\n      }\n  }\n\n  render () {\n    const icon = require('../icons/chocoboapi-c-2.png')\n    if (this.state.success === true) {\n      return <Redirect to=\"/noctis/profile\" />\n    } else\n    {\n      return (\n        <header className='form-container'>\n          <img src={icon} className='main-photo' alt='logo' />\n          <p>Enter credentials</p>\n          <Route path='/noctis/login' component={login} />\n          <Route path='/noctis/register' component={register} />\n          <form>\n            <div className='form-group'>\n              <input type='text' className='form-control login-username' placeholder='enter username' onChange={(e) => this.setState({ username: e.target.value })} />\n            </div>\n            <div className='form-group'>\n              <input type='password' className='form-control' placeholder='enter password' onChange={(e) => this.setState({ password: e.target.value })} />\n            </div>\n            <div id='login-error'>invalid credentials</div>\n            <div id='validation-error'>enter your credentials</div>\n            <button type='submit' className='btn btn-primary btn-block' onClick={(e) => this.handleLogin(e)}>Login</button>\n          </form>\n          <p className='font-regular'>Or <Link to='/noctis/register' className='link'>register</Link></p>\n        </header>\n      )\n    }\n  }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport { BrowserRouter as Route, Link, Redirect } from 'react-router-dom'\nimport login from './Login'\n\nclass Register extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      username: '',\n      firstname: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      success: false\n    }\n  }\n\n  validateForm () {\n    let error = 0\n    if (this.state.username.length < 6) {\n      error = 1\n    } \n    if (this.state.email.length < 6) {\n      error = 1\n    } \n    if (this.state.firstname.length === 0) {\n      error = 1\n    } \n    // if (this.state.password.length < 6 || this.state.password.length > 12) {\n    //   error = 1\n    // } \n    // if (this.state.password.length > 6 && this.state.password !== this.state.confirmpassword) {\n    //   error = 1\n    // } \n\n    if (error === 1) {\n      document.getElementById('validation-error').style.display = 'block'\n      return false\n    } else {\n      document.getElementById('validation-error').style.display = 'none'\n      return true\n    }\n  }\n\n  handleResponseErrors (error) {\n    let password = error.Password\n    let cpassword = error.ConfirmPassword\n    let email = error.Email\n    let display = ''\n\n    if (email !==  undefined) {\n      display = email\n    }\n    if (password !== undefined) {\n      display += '<br/>' + password\n    }\n    if (cpassword !== undefined) {\n      display += '<br/>' + cpassword\n    }\n    document.getElementById('validation-error').innerHTML = display\n    document.getElementById('validation-error').style.display = 'block'\n  }\n\n  handleRegistration (e) {\n    const that = this\n    e.preventDefault()\n    document.getElementById('validation-error').style.display = 'none'\n    if (this.validateForm()) {\n      const payload = {\n        username: this.state.username,\n        firstname: this.state.firstname,\n        email: this.state.email,\n        password: this.state.password,\n        confirmpassword: this.state.confirmpassword,\n        audience: 'ChocoboApi'\n      }\n      fetch('https://chocoboapi.azurewebsites.net/v1/account/register', {\n        method: 'post',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      }).then(response => response.json())\n        .then(function(response){\n          document.getElementById('overlay').style.display = 'none'\n          if (response.token) {\n            sessionStorage.setItem('token', response.token);\n            sessionStorage.setItem('user', JSON.stringify(response.user));\n            that.setState({\n              success: true,\n              user: response.user\n            })\n          } else {\n            console.log('registration failed')\n            console.log(response.errors)\n            that.handleResponseErrors(response.errors)\n          }\n        })\n    } else {\n        console.log('validation failed')\n    }\n  }\n\n  render () {\n    const icon = require('../icons/chocoboapi-c-2.png')\n    if (this.state.success === true) {\n      return <Redirect to=\"/noctis/profile\" />\n    } else\n    {\n      return (\n        <header className='form-container'>\n          <img src={icon} className='main-photo' alt='logo' />\n          <p>Sign up!</p>\n          <Route exact path='/noctis' component={login} />\n          <Route path='/noctis/login' component={login} />\n          <form>\n            <div className='form-group'>\n              <input type='text' className='form-control login-username' placeholder='username' onChange={(e) => this.setState({ username: e.target.value })} />\n            </div>\n            <div className='form-group'>\n              <input type='text' className='form-control' placeholder='first name' onChange={(e) => this.setState({ firstname: e.target.value })} />\n            </div>\n            <div className='form-group'>\n              <input type='email' className='form-control' placeholder='enter email' onChange={(e) => this.setState({ email: e.target.value })} />\n            </div>\n            <div className='form-group'>\n              <input type='password' className='form-control' placeholder='enter password' onChange={(e) => this.setState({ password: e.target.value })} />\n            </div>\n            <div className='form-group'>\n              <input type='password' className='form-control' placeholder='confirm password' onChange={(e) => this.setState({ confirmpassword: e.target.value })} />\n            </div>\n            <div id='validation-error'>form validation failed</div>\n            <button type='submit' className='btn btn-primary btn-block' onClick={(e) => this.handleRegistration(e)}>Register</button>\n          </form>\n          <p className='font-regular'>Or <Link to='/noctis/login' className='link'>login</Link></p>\n        </header>\n      )\n    }\n  }\n}\n\nexport default Register\n","import React, { Component } from 'react'\nimport { BrowserRouter as Route, Link, Redirect} from 'react-router-dom'\nimport * as moment from 'moment'\n\nclass Profile extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      username: '',\n      email: '',\n      firstname: '',\n      lastname: '',\n      age: '',\n      birthdate: '',\n      city: '',\n      state: '',\n      photo: '',\n      wallpaper: ''\n    }\n  }\n\n  componentDidMount () {\n    document.getElementById('overlay').style.display = 'none'\n  }\n\n  isLoggedIn () {\n    if (sessionStorage.token && sessionStorage.token !== 'undefined') {\n      return true\n    } else {\n      this.handleLogout()\n      return false\n    }\n  }\n\n  handleUserDelete (e) {\n    document.getElementById('overlay').style.display = 'none'\n    console.log('user deleted')\n  }\n\n  handleResponseErrors (error) {\n    let password = error.Password\n    let cpassword = error.ConfirmPassword\n    let email = error.Email\n    let display = ''\n\n    if (email !==  undefined) {\n      display = email\n    }\n    if (password !== undefined) {\n      display += '<br/>' + password\n    }\n    if (cpassword !== undefined) {\n      display += '<br/>' + cpassword\n    }\n    document.getElementById('validation-error').innerHTML = display\n    document.getElementById('validation-error').style.display = 'block'\n  }\n\n  handleLogout (e) {\n    document.getElementById('overlay').style.display = 'none'\n    sessionStorage.clear()\n    this.props.history.push('/noctis')\n  }\n\n  handleUserUpdate (e) {\n    e.preventDefault()\n    document.getElementById('overlay').style.display = 'block'\n    const token = sessionStorage.token\n    const user = JSON.parse(sessionStorage.user)\n    if (this.validateForm()) {\n      let payload = new FormData()\n      payload.append('id', user.id)\n      payload.append('photo', (this.state.photo === '') ? user.photo : document.forms['profile-form']['upload-photo'].files[0])\n      payload.append('wallpaper', (this.state.wallpaper === '') ? user.wallpaper : document.forms['profile-form']['upload-wallpaper'].files[0])\n      payload.append('username', (this.state.username === '') ? user.userName : this.state.username)\n      payload.append('email', (this.state.email === '') ? user.email : this.state.email)\n      payload.append('firstname', (this.state.firstname === '') ? user.firstName : this.state.firstname)\n      payload.append('lastname', (this.state.lastname === '') ? user.lastName : this.state.lastname)\n      payload.append('age', (this.state.age === '') ? user.age : this.state.age)\n      payload.append('birthdate', (this.state.birthdate === '') ? user.birthDate : this.state.birthdate)\n      payload.append('city', (this.state.city === '') ? user.city : this.state.city)\n      payload.append('state', (this.state.state === '') ? user.state : this.state.state)\n      fetch('https://chocoboapi.azurewebsites.net/v1/manage/update', {\n        method: 'put',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        },\n        body: payload\n      }).then(response => response.json())\n        .then(function(response) {\n          document.getElementById('overlay').style.display = 'none'\n          if (response.user) {\n            sessionStorage.setItem('user', JSON.stringify(response.user));\n          } else {\n            console.log('update failed')\n            console.log(response.errors)\n            //that.handleResponseErrors(response.errors)\n          }\n        })\n    } else {\n      console.log('validation failed')\n    }\n  }\n\n  validateForm() {\n    let error = 0\n    // if (this.state.username.length < 6) {\n    //   error = 1\n    // } \n    // if (this.state.firstname.length === 0) {\n    //   error = 1\n    // } \n    // if (this.state.email.length === 0) {\n    //   error = 1\n    // } \n\n    if (error === 1) {\n      document.getElementById('overlay').style.display = 'none'\n      document.getElementById('validation-error').style.display = 'block'\n      return false\n    } else {\n      document.getElementById('validation-error').style.display = 'none'\n      return true\n    }\n  }\n\n  handleProfilePhotoChange (e) {\n    let img = URL.createObjectURL(e.target.files[0]);\n    if (img) {\n      document.getElementById('profile-photo').src = img\n      this.setState({ photo: e.target.value })\n    }\n  }\n\n  render () {\n    if (this.isLoggedIn()) {\n      const user = JSON.parse(sessionStorage.user)\n      return (\n        <header className='form-container'>\n          <form name='profile-form' id='profile-form' className='form-profile' encType='multipart/form-data' method='put'>\n          <div className='profile-container'>\n            <img id='wallpaper-photo' className='wallpaper-photo' src={user.wallpaper} alt={user.userName} />\n            <input id=\"upload-wallpaper\" type=\"file\" accept=\"image/*\" name=\"wallpaper\" />\n            <img id='profile-photo' className='profile-photo' src={user.photo} alt={user.userName} />\n            <input id=\"upload-photo\" type=\"file\" accept=\"image/*\" name=\"photo\" onInput={(e) => this.handleProfilePhotoChange(e)} />\n          </div>\n          <p className='font-weight-bold login-username'>{user.userName}</p>\n          <p className='font-small text-secondary'>Joined: {moment(user.joinDate).format('MM/DD/yyyy')}</p>\n          <div className='input-group input-group-override'>\n                <input type='text' className='form-control login-username' defaultValue={user.userName} placeholder='user name' onChange={(e) => this.setState({ username: e.target.value })} />\n                <span>&nbsp;</span>\n                <input type='text' className='form-control' defaultValue={user.email} placeholder='email' onChange={(e) => this.setState({ email: e.target.value })} />\n            </div>\n            <div className='input-group'>\n                <input type='text' className='form-control' defaultValue={user.firstName} placeholder='first name' onChange={(e) => this.setState({ firstname: e.target.value })} />\n                <span>&nbsp;</span>\n                <input type='text' className='form-control' defaultValue={user.lastName} placeholder='last name' onChange={(e) => this.setState({ lastname: e.target.value })} />\n            </div>\n            <div className='input-group'>\n                <input type='number' className='form-control' defaultValue={user.age} placeholder='00' onChange={(e) => this.setState({ age: e.target.value })} />\n                <span>&nbsp;</span>\n                <input type='date' className='form-control' defaultValue={moment(user.birthDate).format('YYYY-MM-DD')} onChange={(e) => this.setState({ birthdate: e.target.value })} />\n            </div>\n            <div className='input-group'>\n                <input type='text' className='form-control' defaultValue={user.city} placeholder='city' onChange={(e) => this.setState({ city: e.target.value })} />\n                <span>&nbsp;</span>\n                <input type='text' className='form-control' defaultValue={user.state} placeholder='state' onChange={(e) => this.setState({ state: e.target.value })} />\n            </div>\n            <div id='validation-error'>form validation failed</div>\n            <div className='button-container'>\n              <button type='submit' title='Logout' className='btn btn-secondary btn-profile' onClick={(e) => this.handleLogout(e)}><i className='fas fa-door-closed'></i></button>\n              <button type='submit' title='Update Information' className='btn btn-primary btn-profile' onClick={(e) => this.handleUserUpdate(e)}><i className='fas fa-user-edit'></i></button>\n              <button type='submit' title='Delete Account' className='btn btn-danger btn-profile' onClick={(e) => this.handleUserDelete(e)}><i className='fas fa-user-times'></i></button>\n            </div>\n          </form>\n        </header>\n      )\n    } else {\n      return <Redirect to=\"/noctis\" />\n    }\n  }\n}\n\nexport default Profile\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport register from './components/Register'\nimport login from './components/Login'\nimport profile from './components/Profile'\nimport './App.css'\n\nclass App extends Component {\n  render () {\n    return (\n      <Router basename='/'>\n        <Navbar className='dark-nav' />\n\n        <Route exact path='/noctis' component={login} />\n        <Route path='/noctis/login' component={login} />\n        <Route path='/noctis/register' component={register} />\n        <Route path='/noctis/profile' component={profile} />\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}